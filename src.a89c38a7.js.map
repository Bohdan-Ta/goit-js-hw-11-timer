{"version":3,"sources":["index.js"],"names":["refs","daysEl","document","querySelector","hoursEl","minsEl","secsEl","DownTimer","selector","targetDate","intervalId","setInterval","currentTime","Date","now","deltaTime","countDown","getTimeComponents","upClockView","time","days","pad","Math","floor","hours","mins","secs","value","String","padStart","textContent","timer","startInterval"],"mappings":";;;AAsDA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAtDA,QAAA,gBAEA,IAAMA,EAAO,CACXC,OAAQC,SAASC,cAAc,uBAC/BC,QAASF,SAASC,cAAc,wBAChCE,OAAQH,SAASC,cAAc,uBAC/BG,OAAQJ,SAASC,cAAc,wBAGzBF,EAAoCD,EAApCC,OAAQG,EAA4BJ,EAA5BI,QAASC,EAAmBL,EAAnBK,OAAQC,EAAWN,EAAXM,OAE3BC,EAAAA,WACkC,SAAA,EAAA,GAAxBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAC/BC,KAAAA,WAAa,KACbF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAuCtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,gBApCE,MAAA,WAAgB,IAAA,EAAA,KACTD,KAAAA,SAAWG,YAAY,WACpBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKN,WAAaG,EAC9BI,EAAY,EAAKC,kBAAkBF,GAEzC,EAAKG,YAAYF,IAClB,OA6BL,CAAA,IAAA,oBA1BE,MAAA,SAAkBG,GAMT,MAAA,CAAEC,KALI,KAAKC,IAAIC,KAAKC,MAAMJ,EAAQ,QAK1BK,MAJD,KAAKH,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAI9CM,KAHT,KAAKJ,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MAGlCO,KAFf,KAAKL,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,SAsB5D,CAAA,IAAA,MAjBE,MAAA,SAAIQ,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAgBrC,CAAA,IAAA,cAbE,MAAA,SAAyC,GAA3BT,IAAAA,EAAAA,EAAAA,KAAMI,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC/BzB,EAAO6B,YAAcV,EACrBhB,EAAQ0B,YAAcN,EACtBnB,EAAOyB,YAAcL,EACrBnB,EAAOwB,YAAcJ,MASzB,EA3CMnB,GAsCAwB,EAAQ,IAAIxB,EAAU,CAC1BC,SAAU,WACVC,WAAY,IAAII,KAAK,iBAGvBkB,EAAMC","file":"src.a89c38a7.js","sourceRoot":"../src","sourcesContent":["import './styles.css';\n\nconst refs = {\n  daysEl: document.querySelector('[data-value=\"days\"]'),\n  hoursEl: document.querySelector('[data-value=\"hours\"]'),\n  minsEl: document.querySelector('[data-value=\"mins\"]'),\n  secsEl: document.querySelector('[data-value=\"secs\"]'),\n}\n\nconst { daysEl, hoursEl, minsEl, secsEl } = refs\n\nclass DownTimer {\n  constructor({ selector, targetDate }) {\n    this.intervalId = null\n    this.selector = selector\n    this.targetDate = targetDate\n  }\n\n  startInterval() {\n    this.selector = setInterval(() => {\n      const currentTime = Date.now()\n      const deltaTime = this.targetDate - currentTime\n      const countDown = this.getTimeComponents(deltaTime)\n\n      this.upClockView(countDown)\n  }, 1000)\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    \n    return { days, hours, mins, secs}\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0')\n  }\n\n  upClockView({ days, hours, mins, secs }) {\n    daysEl.textContent = days\n    hoursEl.textContent = hours\n    minsEl.textContent = mins\n    secsEl.textContent = secs\n  }\n}\n\nconst timer = new DownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('dec 1, 2021')\n});\n\ntimer.startInterval()"]}